knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggiraph)
library(openxlsx)
library(pals)
filepath <- file.path('data','AsianPacificIslanderMedianIncome.xlsx')
tabs <- getSheetNames(filepath)
tabList <- map(tabs, ~read.xlsx(xlsxFile = filepath, sheet = .x))
names(tabList) <- tabs
# tidy data
edu <- read.xlsx(file.path('data', 'AsianPacificIslander22_2.xlsx'))
colnames(edu) <- c('education', 'asian', 'nhpi', 'white')
aapi_edu_labels <- c('asian' = 'Asian', 'nhpi' = 'Native Hawaiian or Pacific Islander', 'white' = 'White')
edu_l <- edu %>%
pivot_longer(cols = colnames(edu)[2:4],
names_to = 'race',
values_to = 'share')
edu_l <- edu_l %>%
mutate(education = factor(education, levels = unique(edu_l$education)),
race = factor(race, levels = names(aapi_edu_labels)))
# race = factor(race, levels = c('asian', 'nhpi', 'white')))
plot_title_edu <- 'Educational Attainment'
# plot_subtitle_edu <- ''
plot_source_edu <- 'Source: : U.S. Census Bureau, American Community Survey (ACS) 2015-19 Five-Year Estimates'
e <- ggplot(edu_l) +
geom_col_interactive(aes(share,
race,
fill = education,
tooltip = paste0(education, ": ", scales::label_percent(suffix = " %")(share)))) +
scale_y_discrete(labels = str_wrap(aapi_edu_labels, width = 20)) +
scale_fill_manual(values = pals::brewer.set2(4)) +
scale_x_continuous(labels = scales::label_percent()) +
theme(axis.title = element_text(size = 8),
axis.text.y = element_text(size = 7),
axis.text.x = element_text(size = 8),
legend.position = 'bottom',
legend.text = element_text(size = 5),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.background = element_rect(fill = background.color),
panel.grid.major.x = element_line(color = gridline.color),
panel.grid.minor.x = element_line(color = gridline.color),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.caption = element_text(size=5)) +
labs(x = NULL,
y = NULL,
fill = NULL,
title = plot_title_edu,
caption = plot_source_edu)
e <- ggplot(edu_l) +
geom_col_interactive(aes(race,
share,
fill = education,
tooltip = paste0(education, ": ", scales::label_percent(suffix = " %")(share))),
position = 'dodge') +
scale_x_discrete(labels = str_wrap(aapi_edu_labels, width = 20)) +
scale_fill_manual(values = pals::brewer.set2(4)) +
scale_y_continuous(labels = scales::label_percent()) +
theme(axis.title = element_text(size = 8),
axis.text.y = element_text(size = 7),
axis.text.x = element_text(size = 8),
legend.position = 'bottom',
legend.text = element_text(size = 5),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.background = element_rect(fill = background.color),
panel.grid.major.y = element_line(color = gridline.color),
panel.grid.minor.y = element_line(color = gridline.color),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
plot.caption = element_text(size=5)) +
labs(x = NULL,
y = NULL,
fill = NULL,
title = plot_title_edu,
caption = plot_source_edu)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggiraph)
library(openxlsx)
library(pals)
filepath <- file.path('data','AsianPacificIslanderMedianIncome.xlsx')
tabs <- getSheetNames(filepath)
tabList <- map(tabs, ~read.xlsx(xlsxFile = filepath, sheet = .x))
names(tabList) <- tabs
sg <- tabList[[1]]
# clean data frame
colnames(sg) <- c('year', 'county', 'worker_race', 'median_earn', 'median_earn_moe')
sg <- sg %>%
mutate(label = str_to_title(worker_race),
sort = ifelse(label %in% str_subset(label, 'All.*'), '2', '1'),
lower = median_earn - median_earn_moe,
upper = median_earn + median_earn_moe) %>%
arrange(label)
# arrange labels
label_a <- unique(sg$label)[!(unique(sg$label) %in% str_subset(unique(sg$label), 'All.*'))]
all_labels <- c(label_a, str_subset(unique(sg$label), 'All.*'))
sg_alpha <- sg %>%
mutate(label = factor(label, levels = all_labels),
fill = ifelse(label %in% str_subset(unique(sg$label), '.*Region.*'), '1', '2')) %>%
arrange(label)
plot_title <- 'Median Worker Annual Earnings'
plot_subtitle <- 'Asian Alone Groups and Total Regional '
plot_source <- 'Source: : U.S. Census Bureau, American Community Survey (ACS) 2015-19 Five-Year Estimates'
gridline.color <- '#ededed'
background.color <- 'white'
df_high_low <- sg_alpha %>%
arrange(desc(median_earn)) %>%
mutate(label = str_to_title(worker_race)) %>%
mutate(label = factor(label, level = label))
h <- ggplot(df_high_low) +
geom_col_interactive(aes(label, median_earn, fill = worker_race,
tooltip = paste0(label,': $', prettyNum(median_earn, big.mark=",",scientific=FALSE)))) +
geom_linerange_interactive(aes(x = label,
ymin = lower,
ymax = upper,
tooltip = paste0(label, ': Lower MOE: $',  prettyNum(lower, big.mark=",",scientific=FALSE), ', Upper MOE: $', prettyNum(upper, big.mark=",",scientific=FALSE)))) +
scale_fill_manual(values = pals::brewer.pastel1(24)) +
scale_x_discrete(labels = function(x) stringr::str_wrap(x, width = 35)) +
scale_y_continuous(labels = scales::label_dollar()) +
theme(axis.title = element_text(size = 8),
axis.text.y = element_text(size = 5),
axis.text.x = element_text(size = 7),
legend.position = 'none',
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.background = element_rect(fill = background.color),
panel.grid.major.x = element_line(color = gridline.color),
panel.grid.minor.x = element_line(color = gridline.color),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.caption = element_text(size=5)) +
labs(x = 'Person Detailed Race',
y = 'Median Worker Earnings',
title = plot_title,
subtitle = plot_subtitle,
caption = plot_source) +
coord_flip()
plot_h <- ggiraph(ggobj = h)
plot_h
htmltools::save_html(plot_h, "median-worker-annual-earn.html")
br <- tabList[[2]]
# clean data frame
colnames(br) <- c('worker_race', 'median_earn', 'median_earn_moe')
br <- br %>%
mutate(label = str_to_title(worker_race),
sort = ifelse(label %in% str_subset(label, 'Total.*'), '3', '1'),
sort = ifelse(label %in% str_subset(label, 'Two.*'), '2', sort),
lower = median_earn - median_earn_moe,
upper = median_earn + median_earn_moe) %>%
arrange(desc(median_earn))
br <- br %>%
mutate(label = factor(label, levels = label))
plot_title_br <- 'Median Worker Annual Earnings'
# plot_subtitle_br <- 'Asian Alone Groups and Total Regional'
plot_source_br <- 'Source: : U.S. Census Bureau, American Community Survey (ACS) 2015-19 Five-Year Estimates'
i <- ggplot(br) +
geom_col_interactive(aes(label, median_earn, fill = worker_race,
tooltip = paste0(label,': $', prettyNum(median_earn, big.mark=",",scientific=FALSE)))) +
geom_linerange_interactive(aes(x = label,
ymin = lower,
ymax = upper,
tooltip = paste0(label, ': Lower MOE: $',  prettyNum(lower, big.mark=",",scientific=FALSE), ', Upper MOE: $', prettyNum(upper, big.mark=",",scientific=FALSE)))) +
scale_fill_manual(values = pals::brewer.pastel1(9)) +
scale_x_discrete(labels = function(x) stringr::str_wrap(x, width = 35)) +
scale_y_continuous(labels = scales::label_dollar()) +
theme(axis.title = element_text(size = 8),
axis.text.y = element_text(size = 5),
axis.text.x = element_text(size = 7),
legend.position = 'none',
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.background = element_rect(fill = background.color),
panel.grid.major.x = element_line(color = gridline.color),
panel.grid.minor.x = element_line(color = gridline.color),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.caption = element_text(size=5)) +
labs(x = 'Person Broad Race',
y = 'Median Worker Earnings',
title = plot_title_br,
# subtitle = plot_subtitle_br,
caption = plot_source_br) +
coord_flip()
plot_i <- ggiraph(ggobj = i)
plot_i
htmltools::save_html(plot_i, "median-worker-annual-earn_broad.html")
# tidy data
edu <- read.xlsx(file.path('data', 'AsianPacificIslander22_2.xlsx'))
colnames(edu) <- c('education', 'asian', 'nhpi', 'white')
aapi_edu_labels <- c('asian' = 'Asian', 'nhpi' = 'Native Hawaiian or Pacific Islander', 'white' = 'White')
edu_l <- edu %>%
pivot_longer(cols = colnames(edu)[2:4],
names_to = 'race',
values_to = 'share')
edu_l <- edu_l %>%
mutate(education = factor(education, levels = unique(edu_l$education)),
race = factor(race, levels = names(aapi_edu_labels)))
# race = factor(race, levels = c('asian', 'nhpi', 'white')))
plot_title_edu <- 'Educational Attainment'
# plot_subtitle_edu <- ''
plot_source_edu <- 'Source: : U.S. Census Bureau, American Community Survey (ACS) 2015-19 Five-Year Estimates'
e <- ggplot(edu_l) +
geom_col_interactive(aes(share,
race,
fill = education,
tooltip = paste0(education, ": ", scales::label_percent(suffix = " %")(share)))) +
scale_y_discrete(labels = str_wrap(aapi_edu_labels, width = 20)) +
scale_fill_manual(values = pals::brewer.set2(4)) +
scale_x_continuous(labels = scales::label_percent()) +
theme(axis.title = element_text(size = 8),
axis.text.y = element_text(size = 7),
axis.text.x = element_text(size = 8),
legend.position = 'bottom',
legend.text = element_text(size = 5),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.background = element_rect(fill = background.color),
panel.grid.major.x = element_line(color = gridline.color),
panel.grid.minor.x = element_line(color = gridline.color),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.caption = element_text(size=5)) +
labs(x = NULL,
y = NULL,
fill = NULL,
title = plot_title_edu,
caption = plot_source_edu)
plot_e <- ggiraph(ggobj = e)
plot_e
htmltools::save_html(plot_e, "aapi-education.html")
e <- ggplot(edu_l) +
geom_col_interactive(aes(race,
share,
fill = education,
tooltip = paste0(education, ": ", scales::label_percent(suffix = " %")(share))),
position = 'dodge') +
scale_x_discrete(labels = str_wrap(aapi_edu_labels, width = 20)) +
scale_fill_manual(values = pals::brewer.set2(4)) +
scale_y_continuous(labels = scales::label_percent()) +
theme(axis.title = element_text(size = 8),
axis.text.y = element_text(size = 7),
axis.text.x = element_text(size = 8),
legend.position = 'bottom',
legend.text = element_text(size = 5),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.background = element_rect(fill = background.color),
panel.grid.major.y = element_line(color = gridline.color),
panel.grid.minor.y = element_line(color = gridline.color),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
plot.caption = element_text(size=5)) +
labs(x = NULL,
y = NULL,
fill = NULL,
title = plot_title_edu,
caption = plot_source_edu)
plot_e <- ggiraph(ggobj = e)
plot_e
# htmltools::save_html(plot_e, "aapi-education.html")
plot_e
plot_title_edu <- 'Educational Attainment'
# plot_subtitle_edu <- ''
plot_source_edu <- 'Source: : U.S. Census Bureau, American Community Survey (ACS) 2015-19 Five-Year Estimates'
e <- ggplot(edu_l) +
geom_col_interactive(aes(share,
race,
fill = education,
tooltip = paste0(education, ": ", scales::label_percent(suffix = " %")(share)))) +
scale_y_discrete(labels = str_wrap(aapi_edu_labels, width = 20)) +
scale_fill_manual(values = pals::brewer.set2(4)) +
scale_x_continuous(labels = scales::label_percent()) +
theme(axis.title = element_text(size = 8),
axis.text.y = element_text(size = 7),
axis.text.x = element_text(size = 8),
legend.position = 'bottom',
legend.text = element_text(size = 5),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.background = element_rect(fill = background.color),
panel.grid.major.x = element_line(color = gridline.color),
panel.grid.minor.x = element_line(color = gridline.color),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.caption = element_text(size=5)) +
labs(x = NULL,
y = NULL,
fill = NULL,
title = plot_title_edu,
caption = plot_source_edu)
plot_e <- ggiraph(ggobj = e)
plot_e
htmltools::save_html(plot_e, "aapi-education.html")
plot_e
### Making the Charts and pdf documents now
#install.packages("tinytex")
#update.packages(ask = FALSE, checkBuilt = TRUE)
library(rlang)
library(dplyr)
library(stringr)
library(ggplot2)
library(forcats)
library(odbc)
library(DBI)
library(tidyr)
options(tinytex.verbose = TRUE)
tinytex::tlmgr_update()
library(psrcplot)
library(tidyverse)
library(knitr)
library(magick)
library(openxlsx)
library(htmlwidgets)
library(htmltools)
library(magrittr)
source(here::here('C:/GitHub/equity-focused-trends/women_history/2023/womens_history_story_draft_datacrunching.R'))
plot<-interactive_column_chart(t= summs_2017_2019, x='simple_purpose', y='share',  fill='gender',  est='percent', title= 'Percent of Trips by  Purpose by Gender', source= 'Source: 2017/2019 PSRC Household Travel Survey',
color="psrc_pairs")
htmltools::save_html(plot, file="trips_by_purpose_gender.html")
plot<-interactive_column_chart(t= trav_summs_2017_2019,
x='travelers_total_grp',
y='share',
fill='gender',
color = 'psrc_pairs',
est='percent',
title = 'Percent of Trips Taken by Number of Travelers, \n for People in Households with more than 2 people',
source= 'Source: 2017/2019 PSRC Household Travel Survey' )
htmltools::save_html(plot, file="trips_travellers.html")
#I was having trouble getting the pums api to work, so I just took some previously downloaded data.
inc_sex_2021<-read.csv('earnings_race_gender.csv')
inc_sex_2021<- inc_sex_2021%>% mutate(PINCP_median = round(PINCP_median, -3))%>%mutate(PRACE = str_wrap(PRACE, 25))%>%
mutate(PRACE= str_remove(PRACE, "alone"))%>%
mutate(PRACE= str_remove(PRACE, "Alone"))
reference_val <- inc_sex_2021%>%  filter(SEX=="Total")
ref_val<- reference_val$PINCP_median
inc_sex_2021_ref<-inc_sex_2021%>%
filter(SEX!="Total")%>%
mutate(ref_val=ref_val)
plot <- interactive_bar_chart(t=inc_sex_2021_ref,
x = "PINCP_median",
y = "PRACE",
fill = "SEX",
color="psrc_pairs",
est ="currency",
title = "Earnings by Gender and by Race",
source= '2021 PUMS earnings by race, ethnicity, and gender, for workers working more than 35 hours per week')
htmltools::save_html(plot, file="earnings_gender_race.html")
plot<-interactive_column_chart(t=trips_by_mode_17_19_transit, x= 'gender', y='share', fill= 'race_eth_poc_update', title = 'Transit Mode Share by Race and Gender', source= '2017/2019 PSRC Household Travel Survey')
htmltools::save_html(plot, file="transit_gender_race.html")
plot<-interactive_column_chart(t= mode_summs_2017_2019, x='mode_simple', y='count',  fill='gender_grp', color = "psrc_pairs", est='number', title= "Number of Bike Trips by Gender", source = 'Source: 2019 PSRC Household Travel Survey Data')
htmltools::save_html(plot, file="bike_gender.html")
pums19_sex_age<-read.csv('older_gender.csv')
pums19_sex_age<-pums19_sex_age%>%mutate(count=round(count, -3))%>%mutate(BIN_AGE = factor(BIN_AGE, levels = c('between 65 and 75 years', 'between 75 and 85 years', '85 years and over')))
plot<-interactive_column_chart(pums19_sex_age,
x= 'BIN_AGE',
y= 'count',
fill= 'SEX',
est= 'number',
color = 'psrc_pairs',
title = 'Population by Age Group by Gender',
source='Source: 2019 Public Use Microsample Census data')
htmltools::save_html(plot, file="older_gender.html")
plot <- interactive_bar_chart(t=inc_sex_2021_ref,
x = "PINCP_median",
y = "PRACE",
fill = "SEX",
color="psrc_pairs",
est ="currency",
title = "Earnings by Gender and by Race",
source= '2021 PUMS earnings by race, ethnicity, and gender, for workers working more than 35 hours per week')
plot
plot<-interactive_column_chart(t= trav_summs_2017_2019,
x='travelers_total_grp',
y='share',
fill='gender',
color = 'psrc_pairs',
est='percent',
title = 'Percent of Trips Taken by Number of Travelers, \n for People in Households with more than 2 people',
source= 'Source: 2017/2019 PSRC Household Travel Survey' )
htmltools::save_html(plot, file="trips_travellers.html")
plot
plot<-interactive_column_chart(t=trips_by_mode_17_19_transit, x= 'gender', y='share', fill= 'race_eth_poc_update', title = 'Transit Mode Share by Race and Gender', source= '2017/2019 PSRC Household Travel Survey')
plot
### Making the Charts and pdf documents now
#install.packages("tinytex")
#update.packages(ask = FALSE, checkBuilt = TRUE)
library(rlang)
library(dplyr)
library(stringr)
library(ggplot2)
library(forcats)
library(odbc)
library(DBI)
library(tidyr)
options(tinytex.verbose = TRUE)
tinytex::tlmgr_update()
library(psrcplot)
library(tidyverse)
library(knitr)
library(magick)
library(openxlsx)
library(htmlwidgets)
library(magrittr)
#output_dir<-file.path(getwd(), 'outputs')
#if(!dir.exists(output_dir)){
# dir.create(output_dir)
#}
network_file_loc<-'X:/DSA/Trends/equity/images'
# Create Image
image1 <- image_read(file.path(network_file_loc, 'commute.jpg'))
image2 <- image_read(file.path(network_file_loc, "ferry.jpg"))
image3 <- image_read(file.path(network_file_loc, "streetart.jpg"))
image4 <- image_read(file.path(network_file_loc, "bike.jpg"))
image5 <- image_read(file.path(network_file_loc, "transit.jpg"))
input <- c(image_scale(image1, "x300"), image_scale(image2, "x300"), image_scale(image3, "x300"),  image_scale(image4, "x300"), image_scale(image5, "x300"))
women2_image_header <- image_append(input)
image_write(women2_image_header, path="women2_image_header.png", format="png")
women2_image_header
install_psrc_fonts()
source(here::here('templates/equity_example/womens_history_story_draft_datacrunching.R'))
